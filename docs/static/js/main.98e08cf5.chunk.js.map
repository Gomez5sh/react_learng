{"version":3,"sources":["helpers/getGifts.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFechGifs.js","components/AddCategory.js","GiftExpertApp.js","index.js"],"names":["getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","useState","loading","state","setstate","useEffect","then","useFechGifs","AddCategory","setCategories","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cast","type","value","onChange","target","required","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAAaA,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAgBdM,GAhBc,4CAAH,sDCEPO,EAAe,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEpC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHGO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDf,SAACA,GAAc,IAAD,EACboB,mBAAS,CACjCb,KAAM,GACNc,SAAS,IAH4B,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OATAC,qBAAU,WACRzB,EAAQC,GAAUyB,MAAK,SAACf,GACtBa,EAAS,CACPhB,KAAMG,EACNW,SAAS,SAGZ,CAACrB,IAEGsB,EDb2BI,CAAY1B,GAAhCa,EAD0B,EAChCN,KAAcc,EADkB,EAClBA,QAEtB,OACE,qCACE,6BAAKrB,IACJqB,GACC,mBAAGL,UAAU,mCAAb,yBAEF,qBAAKA,UAAU,8CAAf,SACGH,EAAOJ,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,eAA+BA,GAAZA,EAAIC,a,OEZ3BgB,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZR,mBAAS,IADG,mBACzCS,EADyC,KAC7BC,EAD6B,KAehD,OACE,qBAAKd,UAAU,UAAf,SACE,uBAAMA,UAAU,gBAAgBe,SAVf,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BP,GAAc,SAACQ,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAMd,UACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAnBkB,SAACP,GAEzBF,EAAcE,EAAEQ,OAAOF,QAkBjBG,UAAQ,IAEV,qBAAKzB,UAAU,cACf,uBAAOA,UAAU,WAAjB,wBCxBO,SAAS0B,IAAiB,IAAD,EACFtB,mBAAS,CAAC,KADR,mBAC/BuB,EAD+B,KACnBf,EADmB,KAGtC,OACE,gCACE,oBAAIZ,UAAU,0CAAd,+BAGA,cAAC,EAAD,CAAaY,cAAeA,IAE5B,6BACGe,EAAWlC,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,W,MCTzB4C,IAASC,OACP,mCACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.98e08cf5.chunk.js","sourcesContent":["export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=20&api_key=jwXSnxaqfe0QVKAge57OJBtrKbsXpTgU`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n\n  //console.log(gifs);\n  return gifs;\n};\n","import React from \"react\";\n\nexport const GiftGridItem = ({ title, url }) => {\n  //console.log(title, url);\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useFechGifs } from \"../hooks/useFechGifs\";\nimport { GiftGridItem } from \"./GiftGridItem\";\n\nexport const GiftGrid = ({ category }) => {\n  const { data: images, loading } = useFechGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading && (\n        <p className=\"animate__animated animate__flash\">Now Loading</p>\n      )}\n      <div className=\"card-grid animate__animated animate__fadeIn\">\n        {images.map((img) => {\n          return <GiftGridItem key={img.id} {...img} />;\n        })}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifts\";\n\nexport const useFechGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((img) => {\n      setstate({\n        data: img,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputChange = (e) => {\n    //console.log(e.target.value);\n    setInputValue(e.target.value);\n  };\n\n  const handleSutmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((cast) => [inputValue, ...cast]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <form className=\"wrapper-input\" onSubmit={handleSutmit}>\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={handleInputChange}\n          required\n        />\n        <div className=\"underline\"></div>\n        <label className=\"lbl-name\">Text</label>\n      </form>\n    </div>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { GiftGrid } from \"./components/GiftGrid\";\nimport { AddCategory } from \"./components/AddCategory\";\n\nexport default function GiftExpertApp() {\n  const [categories, setCategories] = useState([\"\"]);\n\n  return (\n    <div>\n      <h2 className=\"title animate__animated animate__bounce\">\n        Gif Search Engine\n      </h2>\n      <AddCategory setCategories={setCategories} />\n\n      <ol>\n        {categories.map((category) => (\n          <GiftGrid key={category} category={category} />\n        ))}\n      </ol>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// component\nimport GiftExpertApp from \"./GiftExpertApp\";\n// css\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <GiftExpertApp />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}